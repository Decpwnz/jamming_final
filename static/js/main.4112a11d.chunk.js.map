{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","state","term","handleTermChange","bind","search","event","this","setState","target","value","onSearch","className","placeholder","onChange","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","playlistName","updatePlaylistName","find","savedTrack","push","filter","currentTrack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4112a11d.chunk.js","sourcesContent":["const clientId = \"892c4bb4edee4cdca4ec496cf201852e\";\r\n\r\n// const redirectUri = \"http://localhost:3000/\";\r\n// const redirectUri = \"http://wrong-fight.surge.sh\";\r\nconst redirectUri = \"http://precious-cherries.surge.sh/\";\r\n\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n  getAccessToken() {\r\n    if (accessToken) {\r\n      return accessToken;\r\n    }\r\n\r\n    // check for an access token match\r\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (accessTokenMatch && expiresInMatch) {\r\n      accessToken = accessTokenMatch[1];\r\n      const expiresIn = Number(expiresInMatch[1]);\r\n      // this clears the parameters, allowing us to grab a new access token when it expires\r\n      window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\r\n      window.history.pushState(\"Access Token\", null, \"/\");\r\n      return accessToken;\r\n    } else {\r\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n      window.location = accessUrl;\r\n    }\r\n  },\r\n\r\n  search(term) {\r\n    const accessToken = Spotify.getAccessToken();\r\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((jsonResponse) => {\r\n        if (!jsonResponse.tracks) {\r\n          return [];\r\n        }\r\n        return jsonResponse.tracks.items.map((track) => ({\r\n          id: track.id,\r\n          name: track.name,\r\n          artist: track.artists[0].name,\r\n          album: track.album.name,\r\n          uri: track.uri,\r\n        }));\r\n      });\r\n  },\r\n\r\n  savePlaylist(name, trackUris) {\r\n    if (!name || !trackUris.length) {\r\n      return;\r\n    }\r\n\r\n    const accessToken = Spotify.getAccessToken();\r\n    const headers = { Authorization: `Bearer ${accessToken}` };\r\n    let userId;\r\n    return fetch(\"https://api.spotify.com/v1/me\", { headers: headers })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        userId = jsonResponse.id;\r\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n          headers: headers,\r\n          method: \"POST\",\r\n          body: JSON.stringify({ name: name }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((jsonResponse) => {\r\n            const playlistId = jsonResponse.id;\r\n            return fetch(\r\n              `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n              {\r\n                headers: headers,\r\n                method: \"POST\",\r\n                body: JSON.stringify({ uris: trackUris }),\r\n              }\r\n            );\r\n          });\r\n      });\r\n  },\r\n};\r\n\r\nexport default Spotify;\r\n","import React from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: \"\",\n    };\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  handleTermChange(event) {\n    this.setState({ term: event.target.value });\n  }\n\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input\n          placeholder=\"Enter A Song, Album, or Artist\"\n          onChange={this.handleTermChange}\n        />\n        <button className=\"SearchButton\" onClick={this.search}>\n          SEARCH\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./Track.css\";\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n\n  renderAction() {\n    if (this.props.isRemoval) {\n      return (\n        <button className=\"Track-action\" onClick={this.removeTrack}>\n          -\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"Track-action\" onClick={this.addTrack}>\n          +\n        </button>\n      );\n    }\n  }\n\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>\n            {this.props.track.artist} | {this.props.track.album}\n          </p>\n        </div>\n        {this.renderAction()}\n      </div>\n    );\n  }\n}\n\nexport default Track;\n","import React from \"react\";\nimport \"./TrackList.css\";\nimport Track from \"../Track/Track\";\n\nclass TrackList extends React.Component {\n  render() {\n    return (\n      <div className=\"TrackList\">\n        {this.props.tracks.map((track) => {\n          return (\n            <Track\n              track={track}\n              key={track.id}\n              onAdd={this.props.onAdd}\n              onRemove={this.props.onRemove}\n              isRemoval={this.props.isRemoval}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default TrackList;\n","import React from 'react';\nimport './SearchResults.css';\nimport TrackList from '../TrackList/TrackList';\n\nclass SearchResults extends React.Component {\n    render() {\n        return(\n            <div className=\"SearchResults\">\n                <h2>Results</h2>\n                <TrackList tracks={this.props.searchResults} onAdd={this.props.onAdd} isRemoval={false}/>\n            </div>\n        )\n    }\n}\n\nexport default SearchResults;","import React from \"react\";\nimport \"./Playlist.css\";\nimport TrackList from \"../TrackList/TrackList\";\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  handleNameChange(event) {\n    this.props.onNameChange(event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input onChange={this.handleNameChange} defaultValue={\"New Playlist\"} />\n        <TrackList\n          tracks={this.props.playlistTracks}\n          isRemoval={true}\n          onRemove={this.props.onRemove}\n        />\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>\n          SAVE TO SPOTIFY\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Playlist;\n","import React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport Spotify from \"../../util/Spotify\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n\n      playlistName: \"My Playlist\",\n\n      playlistTracks: [],\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n\n    this.removeTrack = this.removeTrack.bind(this);\n\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n\n    this.savePlaylist = this.savePlaylist.bind(this);\n\n    this.search = this.search.bind(this);\n  }\n\n  search(term) {\n    Spotify.search(term).then((searchResults) => {\n      this.setState({ searchResults: searchResults });\n    });\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({ playlistTracks: tracks });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\n\n    this.setState({ playlistTracks: tracks });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map((track) => track.uri);\n\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: [],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}